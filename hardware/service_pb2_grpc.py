# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import service_pb2 as service__pb2


class HardwareCommandStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Basic = channel.unary_unary(
        '/rpc.HardwareCommand/Basic',
        request_serializer=service__pb2.BasicRequest.SerializeToString,
        response_deserializer=service__pb2.BasicResponse.FromString,
        )
    self.Fade = channel.unary_unary(
        '/rpc.HardwareCommand/Fade',
        request_serializer=service__pb2.FadeRequest.SerializeToString,
        response_deserializer=service__pb2.FadeResponse.FromString,
        )
    self.Rainbow = channel.unary_unary(
        '/rpc.HardwareCommand/Rainbow',
        request_serializer=service__pb2.RainbowRequest.SerializeToString,
        response_deserializer=service__pb2.RainbowResponse.FromString,
        )
    self.Clear = channel.unary_unary(
        '/rpc.HardwareCommand/Clear',
        request_serializer=service__pb2.ClearRequest.SerializeToString,
        response_deserializer=service__pb2.ClearResponse.FromString,
        )
    self.Test = channel.unary_unary(
        '/rpc.HardwareCommand/Test',
        request_serializer=service__pb2.TestRequest.SerializeToString,
        response_deserializer=service__pb2.TestResponse.FromString,
        )


class HardwareCommandServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Basic(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Fade(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rainbow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Clear(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Test(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HardwareCommandServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Basic': grpc.unary_unary_rpc_method_handler(
          servicer.Basic,
          request_deserializer=service__pb2.BasicRequest.FromString,
          response_serializer=service__pb2.BasicResponse.SerializeToString,
      ),
      'Fade': grpc.unary_unary_rpc_method_handler(
          servicer.Fade,
          request_deserializer=service__pb2.FadeRequest.FromString,
          response_serializer=service__pb2.FadeResponse.SerializeToString,
      ),
      'Rainbow': grpc.unary_unary_rpc_method_handler(
          servicer.Rainbow,
          request_deserializer=service__pb2.RainbowRequest.FromString,
          response_serializer=service__pb2.RainbowResponse.SerializeToString,
      ),
      'Clear': grpc.unary_unary_rpc_method_handler(
          servicer.Clear,
          request_deserializer=service__pb2.ClearRequest.FromString,
          response_serializer=service__pb2.ClearResponse.SerializeToString,
      ),
      'Test': grpc.unary_unary_rpc_method_handler(
          servicer.Test,
          request_deserializer=service__pb2.TestRequest.FromString,
          response_serializer=service__pb2.TestResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.HardwareCommand', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
