// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Color struct {
	R                    int32    `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G                    int32    `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B                    int32    `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Color) Reset()         { *m = Color{} }
func (m *Color) String() string { return proto.CompactTextString(m) }
func (*Color) ProtoMessage()    {}
func (*Color) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Color) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Color.Unmarshal(m, b)
}
func (m *Color) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Color.Marshal(b, m, deterministic)
}
func (m *Color) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Color.Merge(m, src)
}
func (m *Color) XXX_Size() int {
	return xxx_messageInfo_Color.Size(m)
}
func (m *Color) XXX_DiscardUnknown() {
	xxx_messageInfo_Color.DiscardUnknown(m)
}

var xxx_messageInfo_Color proto.InternalMessageInfo

func (m *Color) GetR() int32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Color) GetG() int32 {
	if m != nil {
		return m.G
	}
	return 0
}

func (m *Color) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type BasicRequest struct {
	Color                *Color   `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Intensity            float32  `protobuf:"fixed32,2,opt,name=intensity,proto3" json:"intensity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicRequest) Reset()         { *m = BasicRequest{} }
func (m *BasicRequest) String() string { return proto.CompactTextString(m) }
func (*BasicRequest) ProtoMessage()    {}
func (*BasicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *BasicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicRequest.Unmarshal(m, b)
}
func (m *BasicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicRequest.Marshal(b, m, deterministic)
}
func (m *BasicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicRequest.Merge(m, src)
}
func (m *BasicRequest) XXX_Size() int {
	return xxx_messageInfo_BasicRequest.Size(m)
}
func (m *BasicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BasicRequest proto.InternalMessageInfo

func (m *BasicRequest) GetColor() *Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *BasicRequest) GetIntensity() float32 {
	if m != nil {
		return m.Intensity
	}
	return 0
}

type BasicResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicResponse) Reset()         { *m = BasicResponse{} }
func (m *BasicResponse) String() string { return proto.CompactTextString(m) }
func (*BasicResponse) ProtoMessage()    {}
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *BasicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicResponse.Unmarshal(m, b)
}
func (m *BasicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicResponse.Marshal(b, m, deterministic)
}
func (m *BasicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicResponse.Merge(m, src)
}
func (m *BasicResponse) XXX_Size() int {
	return xxx_messageInfo_BasicResponse.Size(m)
}
func (m *BasicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BasicResponse proto.InternalMessageInfo

func (m *BasicResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type FadeRequest struct {
	StartColor           *Color   `protobuf:"bytes,1,opt,name=startColor,proto3" json:"startColor,omitempty"`
	EndColor             *Color   `protobuf:"bytes,2,opt,name=endColor,proto3" json:"endColor,omitempty"`
	StartIntensity       float32  `protobuf:"fixed32,3,opt,name=startIntensity,proto3" json:"startIntensity,omitempty"`
	EndIntensity         float32  `protobuf:"fixed32,4,opt,name=endIntensity,proto3" json:"endIntensity,omitempty"`
	Duration             int32    `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FadeRequest) Reset()         { *m = FadeRequest{} }
func (m *FadeRequest) String() string { return proto.CompactTextString(m) }
func (*FadeRequest) ProtoMessage()    {}
func (*FadeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *FadeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FadeRequest.Unmarshal(m, b)
}
func (m *FadeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FadeRequest.Marshal(b, m, deterministic)
}
func (m *FadeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FadeRequest.Merge(m, src)
}
func (m *FadeRequest) XXX_Size() int {
	return xxx_messageInfo_FadeRequest.Size(m)
}
func (m *FadeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FadeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FadeRequest proto.InternalMessageInfo

func (m *FadeRequest) GetStartColor() *Color {
	if m != nil {
		return m.StartColor
	}
	return nil
}

func (m *FadeRequest) GetEndColor() *Color {
	if m != nil {
		return m.EndColor
	}
	return nil
}

func (m *FadeRequest) GetStartIntensity() float32 {
	if m != nil {
		return m.StartIntensity
	}
	return 0
}

func (m *FadeRequest) GetEndIntensity() float32 {
	if m != nil {
		return m.EndIntensity
	}
	return 0
}

func (m *FadeRequest) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type RainbowRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RainbowRequest) Reset()         { *m = RainbowRequest{} }
func (m *RainbowRequest) String() string { return proto.CompactTextString(m) }
func (*RainbowRequest) ProtoMessage()    {}
func (*RainbowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *RainbowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RainbowRequest.Unmarshal(m, b)
}
func (m *RainbowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RainbowRequest.Marshal(b, m, deterministic)
}
func (m *RainbowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RainbowRequest.Merge(m, src)
}
func (m *RainbowRequest) XXX_Size() int {
	return xxx_messageInfo_RainbowRequest.Size(m)
}
func (m *RainbowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RainbowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RainbowRequest proto.InternalMessageInfo

type RainbowResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RainbowResponse) Reset()         { *m = RainbowResponse{} }
func (m *RainbowResponse) String() string { return proto.CompactTextString(m) }
func (*RainbowResponse) ProtoMessage()    {}
func (*RainbowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *RainbowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RainbowResponse.Unmarshal(m, b)
}
func (m *RainbowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RainbowResponse.Marshal(b, m, deterministic)
}
func (m *RainbowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RainbowResponse.Merge(m, src)
}
func (m *RainbowResponse) XXX_Size() int {
	return xxx_messageInfo_RainbowResponse.Size(m)
}
func (m *RainbowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RainbowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RainbowResponse proto.InternalMessageInfo

func (m *RainbowResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type FadeResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FadeResponse) Reset()         { *m = FadeResponse{} }
func (m *FadeResponse) String() string { return proto.CompactTextString(m) }
func (*FadeResponse) ProtoMessage()    {}
func (*FadeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *FadeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FadeResponse.Unmarshal(m, b)
}
func (m *FadeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FadeResponse.Marshal(b, m, deterministic)
}
func (m *FadeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FadeResponse.Merge(m, src)
}
func (m *FadeResponse) XXX_Size() int {
	return xxx_messageInfo_FadeResponse.Size(m)
}
func (m *FadeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FadeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FadeResponse proto.InternalMessageInfo

func (m *FadeResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type TestRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

type TestResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

func (m *TestResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type ClearRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearRequest) Reset()         { *m = ClearRequest{} }
func (m *ClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()    {}
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *ClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRequest.Unmarshal(m, b)
}
func (m *ClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRequest.Marshal(b, m, deterministic)
}
func (m *ClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRequest.Merge(m, src)
}
func (m *ClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRequest.Size(m)
}
func (m *ClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRequest proto.InternalMessageInfo

type ClearResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearResponse) Reset()         { *m = ClearResponse{} }
func (m *ClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()    {}
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *ClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearResponse.Unmarshal(m, b)
}
func (m *ClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearResponse.Marshal(b, m, deterministic)
}
func (m *ClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearResponse.Merge(m, src)
}
func (m *ClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClearResponse.Size(m)
}
func (m *ClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearResponse proto.InternalMessageInfo

func (m *ClearResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Color)(nil), "rpc.Color")
	proto.RegisterType((*BasicRequest)(nil), "rpc.BasicRequest")
	proto.RegisterType((*BasicResponse)(nil), "rpc.BasicResponse")
	proto.RegisterType((*FadeRequest)(nil), "rpc.FadeRequest")
	proto.RegisterType((*RainbowRequest)(nil), "rpc.RainbowRequest")
	proto.RegisterType((*RainbowResponse)(nil), "rpc.RainbowResponse")
	proto.RegisterType((*FadeResponse)(nil), "rpc.FadeResponse")
	proto.RegisterType((*TestRequest)(nil), "rpc.TestRequest")
	proto.RegisterType((*TestResponse)(nil), "rpc.TestResponse")
	proto.RegisterType((*ClearRequest)(nil), "rpc.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "rpc.ClearResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x4e, 0xb3, 0x40,
	0x14, 0x0d, 0xb4, 0xf4, 0xeb, 0x77, 0x0b, 0xfd, 0x99, 0xef, 0x8b, 0x21, 0xc4, 0x45, 0xc3, 0x82,
	0xaa, 0x4d, 0x48, 0xac, 0x3e, 0x81, 0x24, 0x46, 0x37, 0x2e, 0x88, 0x2f, 0x30, 0xc0, 0xa4, 0x21,
	0x69, 0x67, 0x70, 0x66, 0x6a, 0xe3, 0xd2, 0xc7, 0xf3, 0xad, 0x0c, 0xc3, 0x94, 0x0e, 0x1a, 0xed,
	0xf2, 0x9c, 0x7b, 0xef, 0xb9, 0xe7, 0x9e, 0x01, 0xf0, 0x04, 0xe1, 0xaf, 0x65, 0x4e, 0xe2, 0x8a,
	0x33, 0xc9, 0x50, 0x8f, 0x57, 0x79, 0x78, 0x0d, 0x4e, 0xc2, 0x36, 0x8c, 0x23, 0x17, 0x2c, 0xee,
	0x5b, 0x73, 0xeb, 0xc2, 0x49, 0x2d, 0x85, 0xd6, 0xbe, 0xdd, 0xa0, 0x75, 0x8d, 0x32, 0xbf, 0xd7,
	0xa0, 0x2c, 0x7c, 0x02, 0xf7, 0x0e, 0x8b, 0x32, 0x4f, 0xc9, 0xcb, 0x8e, 0x08, 0x89, 0xe6, 0xe0,
	0xe4, 0xb5, 0x84, 0x9a, 0x1e, 0xad, 0x20, 0xe6, 0x55, 0x1e, 0x2b, 0xd1, 0xb4, 0x29, 0xa0, 0x73,
	0xf8, 0x5b, 0x52, 0x49, 0xa8, 0x28, 0xe5, 0x9b, 0x52, 0xb5, 0xd3, 0x23, 0x11, 0x2e, 0xc0, 0xd3,
	0x7a, 0xa2, 0x62, 0x54, 0x10, 0x74, 0x06, 0x03, 0x4e, 0xc4, 0x6e, 0x23, 0x95, 0xe2, 0x30, 0xd5,
	0x28, 0xfc, 0xb0, 0x60, 0x74, 0x8f, 0x0b, 0x72, 0x58, 0x7c, 0x05, 0x20, 0x24, 0xe6, 0x32, 0xf9,
	0x61, 0xbb, 0x51, 0x45, 0x11, 0x0c, 0x09, 0x2d, 0x9a, 0x4e, 0xfb, 0x5b, 0x67, 0x5b, 0x43, 0x11,
	0x8c, 0xd5, 0xd4, 0x63, 0xeb, 0xb7, 0xa7, 0xfc, 0x7e, 0x61, 0x51, 0x08, 0x2e, 0xa1, 0xc5, 0xb1,
	0xab, 0xaf, 0xba, 0x3a, 0x1c, 0x0a, 0x60, 0x58, 0xec, 0x38, 0x96, 0x25, 0xa3, 0xbe, 0xa3, 0xd2,
	0x6b, 0x71, 0x38, 0x85, 0x71, 0x8a, 0x4b, 0x9a, 0xb1, 0xbd, 0xbe, 0x26, 0xbc, 0x84, 0x49, 0xcb,
	0x9c, 0x08, 0x22, 0x02, 0xb7, 0xc9, 0xe1, 0x44, 0x9f, 0x07, 0xa3, 0x67, 0x22, 0xe4, 0x61, 0x43,
	0x04, 0x6e, 0x03, 0x4f, 0x8c, 0x8d, 0xc1, 0x4d, 0x36, 0x04, 0xf3, 0xc3, 0xdc, 0x02, 0x3c, 0x8d,
	0x7f, 0x1f, 0x5c, 0xbd, 0xdb, 0x30, 0x79, 0xc0, 0xbc, 0xd8, 0x63, 0x4e, 0x12, 0xb6, 0xdd, 0x62,
	0x5a, 0xa0, 0x18, 0x1c, 0xf5, 0xba, 0x68, 0xa6, 0xf2, 0x36, 0xbf, 0x9c, 0x00, 0x99, 0x94, 0xd6,
	0x5e, 0x42, 0xbf, 0xbe, 0x0d, 0x4d, 0x55, 0xcd, 0x78, 0xee, 0x60, 0x66, 0x30, 0xba, 0xf9, 0x16,
	0xfe, 0xe8, 0xcc, 0xd0, 0x3f, 0x55, 0xed, 0x66, 0x1a, 0xfc, 0xef, 0x92, 0x7a, 0x2a, 0x06, 0x47,
	0xdd, 0xa3, 0x2d, 0x99, 0xb7, 0x6a, 0x4b, 0xdd, 0x73, 0x97, 0xd0, 0xaf, 0x73, 0xd3, 0x96, 0x8c,
	0x44, 0xb5, 0x25, 0x33, 0xd4, 0x6c, 0xa0, 0x7e, 0xae, 0x9b, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x4c, 0x85, 0x1d, 0x4c, 0x6d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HardwareCommandClient is the client API for HardwareCommand service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HardwareCommandClient interface {
	Basic(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*BasicResponse, error)
	Fade(ctx context.Context, in *FadeRequest, opts ...grpc.CallOption) (*FadeResponse, error)
	Rainbow(ctx context.Context, in *RainbowRequest, opts ...grpc.CallOption) (*RainbowResponse, error)
	Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error)
	Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error)
}

type hardwareCommandClient struct {
	cc *grpc.ClientConn
}

func NewHardwareCommandClient(cc *grpc.ClientConn) HardwareCommandClient {
	return &hardwareCommandClient{cc}
}

func (c *hardwareCommandClient) Basic(ctx context.Context, in *BasicRequest, opts ...grpc.CallOption) (*BasicResponse, error) {
	out := new(BasicResponse)
	err := c.cc.Invoke(ctx, "/rpc.HardwareCommand/Basic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hardwareCommandClient) Fade(ctx context.Context, in *FadeRequest, opts ...grpc.CallOption) (*FadeResponse, error) {
	out := new(FadeResponse)
	err := c.cc.Invoke(ctx, "/rpc.HardwareCommand/Fade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hardwareCommandClient) Rainbow(ctx context.Context, in *RainbowRequest, opts ...grpc.CallOption) (*RainbowResponse, error) {
	out := new(RainbowResponse)
	err := c.cc.Invoke(ctx, "/rpc.HardwareCommand/Rainbow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hardwareCommandClient) Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error) {
	out := new(ClearResponse)
	err := c.cc.Invoke(ctx, "/rpc.HardwareCommand/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hardwareCommandClient) Test(ctx context.Context, in *TestRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/rpc.HardwareCommand/Test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HardwareCommandServer is the server API for HardwareCommand service.
type HardwareCommandServer interface {
	Basic(context.Context, *BasicRequest) (*BasicResponse, error)
	Fade(context.Context, *FadeRequest) (*FadeResponse, error)
	Rainbow(context.Context, *RainbowRequest) (*RainbowResponse, error)
	Clear(context.Context, *ClearRequest) (*ClearResponse, error)
	Test(context.Context, *TestRequest) (*TestResponse, error)
}

// UnimplementedHardwareCommandServer can be embedded to have forward compatible implementations.
type UnimplementedHardwareCommandServer struct {
}

func (*UnimplementedHardwareCommandServer) Basic(ctx context.Context, req *BasicRequest) (*BasicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Basic not implemented")
}
func (*UnimplementedHardwareCommandServer) Fade(ctx context.Context, req *FadeRequest) (*FadeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fade not implemented")
}
func (*UnimplementedHardwareCommandServer) Rainbow(ctx context.Context, req *RainbowRequest) (*RainbowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rainbow not implemented")
}
func (*UnimplementedHardwareCommandServer) Clear(ctx context.Context, req *ClearRequest) (*ClearResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}
func (*UnimplementedHardwareCommandServer) Test(ctx context.Context, req *TestRequest) (*TestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterHardwareCommandServer(s *grpc.Server, srv HardwareCommandServer) {
	s.RegisterService(&_HardwareCommand_serviceDesc, srv)
}

func _HardwareCommand_Basic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HardwareCommandServer).Basic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.HardwareCommand/Basic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HardwareCommandServer).Basic(ctx, req.(*BasicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HardwareCommand_Fade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FadeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HardwareCommandServer).Fade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.HardwareCommand/Fade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HardwareCommandServer).Fade(ctx, req.(*FadeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HardwareCommand_Rainbow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RainbowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HardwareCommandServer).Rainbow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.HardwareCommand/Rainbow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HardwareCommandServer).Rainbow(ctx, req.(*RainbowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HardwareCommand_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HardwareCommandServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.HardwareCommand/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HardwareCommandServer).Clear(ctx, req.(*ClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HardwareCommand_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HardwareCommandServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.HardwareCommand/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HardwareCommandServer).Test(ctx, req.(*TestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HardwareCommand_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.HardwareCommand",
	HandlerType: (*HardwareCommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Basic",
			Handler:    _HardwareCommand_Basic_Handler,
		},
		{
			MethodName: "Fade",
			Handler:    _HardwareCommand_Fade_Handler,
		},
		{
			MethodName: "Rainbow",
			Handler:    _HardwareCommand_Rainbow_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _HardwareCommand_Clear_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _HardwareCommand_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
